; -------------------------------------------------------------------------
[debug]

lib_deps = ${common.lib_deps}

build_flags =
    -Og -ggdb
    -D GCC_OPTIMIZE_LEVEL=4
    -D ENABLE_GDB=1
    -D DEBUG=1
    -D KFC_SERIAL_PORT=Serial
    -D KFC_DEBUG_SERIAL_PORT=Serial
    -D KFC_DEBUG_USE_SERIAL1=0
    -D DEBUG_INCLUDE_SOURCE_INFO=1
    -D HAVE_FS_FILE_OPEN_MODE=1
    -D SAVE_CRASH_EEPROM_OFFSET=0
    -D SAVE_CRASH_SPACE_SIZE=4096
    -D SAVE_CRASH_FLASH_SECTOR=_ESPSAVECRASH_start
    -D SAVE_CRASH_HAVE_CALLBACKS=0

; -------------------------------------------------------------------------
; esp8266 shared debug env
; debug_esp8266 -> env_esp8266 -> common, debug
[debug_esp8266]

src_filter = ${env_esp8266.src_filter}

lib_deps = ${debug.lib_deps} ${env_esp8266.lib_deps}

build_flags = ${debug.build_flags} ${env_esp8266.build_flags}
    -D DEBUG_HAVE_SAVECRASH=1

; -------------------------------------------------------------------------
; esp32 shared debug env
; debug_esp32 -> env_esp32 -> common, release
[debug_esp32]

src_filter = ${env_esp32.src_filter}

lib_deps = ${debug.lib_deps} ${env_esp32.lib_deps}

build_flags = ${debug.build_flags} ${env_esp32.build_flags}
    -D DEBUG_HAVE_SAVECRASH=0

; -------------------------------------------------------------------------
[env_pin_debugger]

build_flags =
    ; -Wl,--wrap=analogWrite
    ; -Wl,--wrap=analogRead
    ; -Wl,--wrap=digitalWrite
    -Wl,--wrap=digitalRead
    ; -Wl,--wrap=pinMode
    ; -Wl,--wrap=attachInterrupt
    ; -Wl,--wrap=attachScheduledInterrupt
    ; -Wl,--wrap=detachInterrupt
    -D PIN_DEBUGGER=1


; -------------------------------------------------------------------------
; debug esp8266 GDBSTUB
[debug_esp8266_gdbstub]

build_flags =
    -D GDBSTUB_FREERTOS=0
    -D GDBSTUB_USE_OWN_STACK=0
    -D GDBSTUB_CTRLC_BREAK=1
    -D GDBSTUB_REDIRECT_CONSOLE_OUTPUT=1
    -D GDBSTUB_BREAK_ON_INIT=0
    -D HAVE_GDBSTUB=1
    ; -D DEBUG_ESP_PORT=Serial
    ; -D DEBUG_ESP_CORE
    ; -D DEBUG_ESP_WIFI
    ; -D DEBUG_ESP_OOM
    ; -D DEBUG_ESP_SSL
    ; -D DEBUG_ESP_TLS_MEM
    ; -D DEBUG_ESP_HTTP_CLIENT
    ; -D DEBUG_ESP_HTTP_SERVER
    ; -D DEBUG_ESP_HTTP_UPDATE
    ; -D DEBUG_ESP_UPDATER
    ; -D DEBUG_ESP_4
    ; -D DEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"
