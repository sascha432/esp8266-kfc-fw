; -------------------------------------------------------------------------
; Author: sascha_lammers@gmx.de
; -------------------------------------------------------------------------
; I2C analyzer
; -------------------------------------------------------------------------

; SDA=GPIO4=D2
; SCL=GPIO5=D1
;
; can be used to scan the I2C bus and communicate with devices over UART or WebUI
; default PINs are GPIO4=SDA, GEPIO5=SCL
;
; type +help=i2c in the serial console
;
; AT+I2CSCAN[=<start-address=1>][,<end-address=127>][,<sda=4|ANY>,<scl=5>]
;     Scan I2C bus. If ANY is passed as third argument, all available PINs are probed for I2C devices
;  AT+I2CS=<pin-sda>,<pin-scl>[,<speed=100000>,<clock-stretch=45000>,<start|stop>]
;     Configure I2C
;  AT+I2CTM=<address>,<data,...>
;     Transmsit data to slave
;  AT+I2CRQ=<address>,<length>
;     Request data from slave

; setup I2C with 100KBit and scan the bus
; +i2cs=4,5,1000;+i2cscan=1,127,noinit
; +i2cs=5,4,10000;+i2cscan=1,127,noinit

[env:i2canalyzer]
extends = debug_esp8266

src_filter =
    ${debug_esp8266.src_filter}

lib_deps =
    Wire
    SPI
    ${debug_esp8266.lib_deps}

build_flags =
    ${debug_esp8266.build_flags}
    -D __LED_BUILTIN=2
    -D INVERT_BUILTIN_LED=1
    -D MQTT_AUTO_DISCOVERY_MODEL=\"I2C\ Analyzer\"
    -D AT_MODE_SUPPORTED=1
    -D KFC_TWOWIRE_SDA=4
    -D KFC_TWOWIRE_SCL=5
    -D HAVE_I2CSCANNER=1

monitor_filters =
