<?php

namespace Json2php;

use Nette\PhpGenerator\PhpFile;
use Nette\PhpGenerator\PsrPrinter;

class GeneratorPhpFile
{
    use GeneratorTrait;

    public static function generator(string $json, $className = null, $namespace = null, $output = null): string
    {
        $className = self::formatClassName($className);
        $output = $output ?: './';
        $file = new PhpFile();
        $file->addComment('Code generated by json2php. DO NOT EDIT.');
        $file->addComment('Generator at ' . date('Y-m-d H:i:s', time()));
        if ($namespace) {
            $class = $file->addNamespace($namespace)->addClass($className);
        } else {
            $class = $file->addClass($className);
        }


        $obj = json_decode($json);

        foreach ($obj as $property => $value) {
            $type = gettype($value);
            if (is_object($value)) {
                $type = self::generator(json_encode($value), $property, $namespace, $output);
            }
            if (is_array($value)) {
                foreach ($value as $k => $v) {
                    if (is_object($v)) {
                        $type = self::generator(json_encode($value), $property, $namespace, $output);
                    } else {
                        $type = gettype($v) . '[]';
                    }
                    break;
                }
            }
            self::getOrSetMethod($class, $property, $type);
        }
        self::createFile($output . $className . '.php', (new PsrPrinter())->printFile($file));

        return $className;
    }
}